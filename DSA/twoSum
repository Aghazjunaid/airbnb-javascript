function printPairs(arr, n, sum) {
    // Store counts of all elements in map m
    var m = {};

    // Traverse through all elements
    for (var i = 0; i < n; i++) {
      // Search if a pair can be formed with
      // arr[i].
      var rem = sum - arr[i];

      if (m.hasOwnProperty(rem)) {
        var c = m[rem];

        for (var j = 0; j < c; j++) {
            console.log(rem,arr[i])
        }
      }

      if (m.hasOwnProperty(arr[i])) {
        m[arr[i]]++;
      } else {
        m[arr[i]] = 1;
      }
    }
}
printPairs([1, 5, 7, -1, 5],[1, 5, 7, -1, 5].length,6)


let arr = [1, 5, 7, -1, 5]
let s=6

let obj = {}
for(let i=0;i<arr.length;i++){

    let diff = s - arr[i]

    if(diff in obj){
        console.log(arr[i],diff)
    }

    if(arr[i] in obj){
        obj[arr[i]] += 1
    } else{
        obj[arr[i]] = 1
    }
}

//////////////////////////////
let arr = [1,5,5,2,4]

let  num = 6

let obj = {}
for(let i=0;i<arr.length;i++){
    let diff = num - arr[i]
    if(diff in obj){
        console.log(i,obj[diff])
    }
    if(arr[i] in obj){

    }else{
        obj[arr[i]] = i
    }
}
1 0
2 0
4 3
===========================
let arr = [1, 5, 7, -1, 5]
let s=6

let obj = {};

for(let i=0;i<arr.length;i++){
    let diff = s - arr[i];
    if(arr[i] in obj){
        console.log(i,obj[arr[i]])
    } else {
        obj[diff] = i
    }
}

console.log(obj)
